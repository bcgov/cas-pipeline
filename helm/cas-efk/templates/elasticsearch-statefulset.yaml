apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: es-cluster
  namespace: {{ .Release.Namespace }}
  labels:
    "app.kubernetes.io/part-of": efk-stack
spec:
  serviceName: elasticsearch
  replicas: {{ .Values.elasticsearch.replicas }}
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
        - name: elasticsearch
          image: {{ .Values.elasticsearch.image }}:{{ .Values.elasticsearch.version }}
          resources:
            requests:
              cpu: {{ .Values.elasticsearch.cpuRequest }}
              memory: {{ .Values.elasticsearch.memoryRequest }}
          ports:
            - name: rest
              containerPort: {{ .Values.elasticsearch.port.rest }}
              protocol: TCP
            - name: inter-node
              containerPort: {{ .Values.elasticsearch.port.internode }}
              protocol: TCP
          volumeMounts:
            - name: {{ .Values.elasticsearch.volume }}
              mountPath: /usr/share/elasticsearch/data
            - name: certs
              mountPath: /usr/share/elasticsearch/config/certs
          env:
            - name: cluster.name
              value: elasticsearch
            - name: node.name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            {{- $replicaCount := .Values.elasticsearch.replicas | int }}
            - name: discovery.seed_hosts
              value: "{{- range $i, $e := until $replicaCount -}}
                  es-cluster-{{ $i }}.elasticsearch{{- if ne $i (sub $replicaCount 1) }},{{ end }}
                {{- end }}"
            - name: cluster.initial_master_nodes
              value: "{{- range $i, $e := until $replicaCount -}}
                  es-cluster-{{ $i }}{{- if ne $i (sub $replicaCount 1) }},{{ end }}
                {{- end }}"
            - name: ES_JAVA_OPTS
              value: "-Xms512m -Xmx512m"
          command:
            - sh
            - -c
            - |
              echo "xpack.security.enabled: true
              network.host: 0.0.0.0
              xpack.security.transport.ssl.enabled: true
              xpack.security.transport.ssl.verification_mode: certificate
              xpack.security.transport.ssl.key: /usr/share/elasticsearch/config/certs/${HOSTNAME}.key
              xpack.security.transport.ssl.certificate: /usr/share/elasticsearch/config/certs/${HOSTNAME}.crt
              xpack.security.transport.ssl.certificate_authorities: [\"/usr/share/elasticsearch/config/certs/ca.crt\"]" > /usr/share/elasticsearch/config/elasticsearch.yml
              exec /usr/local/bin/docker-entrypoint.sh
      volumes:
        - name: {{ .Values.elasticsearch.volume }}
          persistentVolumeClaim:
            claimName: {{ .Values.elasticsearch.volume }}
        - name: certs
          secret:
            secretName: elastic-certs
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.elasticsearch.volume }}
        labels:
          app: elasticsearch
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.elasticsearch.storageClass }}
        resources:
          requests:
            storage: {{ .Values.elasticsearch.storageRequest }}
