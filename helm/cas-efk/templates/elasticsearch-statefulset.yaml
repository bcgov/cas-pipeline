apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: es-cluster
  namespace: {{ .Release.Namespace }}
  labels:
    "app.kubernetes.io/part-of": efk-stack
spec:
  serviceName: elasticsearch
  replicas: {{ .Values.elasticsearch.replicas }}
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
        - name: elasticsearch
          image: {{ .Values.elasticsearch.image }}:{{ .Values.elasticsearch.version }}
          resources:
            requests:
              cpu: {{ .Values.elasticsearch.cpuRequest }}
              memory: {{ .Values.elasticsearch.memoryRequest }}
          ports:
            - name: rest
              containerPort: {{ .Values.elasticsearch.port.rest }}
              protocol: TCP
            - name: inter-node
              containerPort: {{ .Values.elasticsearch.port.internode }}
              protocol: TCP
          volumeMounts:
            - name: {{ .Values.elasticsearch.volume }}
              mountPath: /usr/share/elasticsearch/data
            {{- if .Values.elasticsearch.security }}
            - name: cert-store
              mountPath: /usr/share/elasticsearch/config/certs
            - name: cert-authority
              mountPath: /usr/share/elasticsearch/config/certs/ca.crt
              subPath: ca.crt
            - name: cert-authority
              mountPath: /usr/share/elasticsearch/config/certs/ca.key
              subPath: ca.key
            - name: config
              mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
              subPath: elasticsearch.yml
            {{ end }}
          env:
            {{- if not .Values.elasticsearch.security }}
            - name: xpack.security.enabled
              value: "false"
            {{ end }}
            - name: cluster.name
              value: elasticsearch
            - name: node.name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            {{- $replicaCount := .Values.elasticsearch.replicas | int }}
            - name: discovery.seed_hosts
              value: "{{- range $i, $e := until $replicaCount -}}
                  es-cluster-{{ $i }}.elasticsearch{{- if ne $i (sub $replicaCount 1) }},{{ end }}
                {{- end }}"
            - name: cluster.initial_master_nodes
              value: "{{- range $i, $e := until $replicaCount -}}
                  es-cluster-{{ $i }}{{- if ne $i (sub $replicaCount 1) }},{{ end }}
                {{- end }}"
            - name: ES_JAVA_OPTS
              value: "-Xms512m -Xmx512m"
            - name: CERT_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.elasticsearch.caSecret }}
                  key: pass
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          command:
            - sh
            - -c
            - |
              bin/elasticsearch-certutil cert -pem \
                --ca-cert ./config/certs/ca.crt --ca-key ./config/certs/ca.key --ca-pass ${CERT_PASS} \
                --name ${HOSTNAME} --dns ${HOSTNAME},${HOSTNAME}.elasticsearch --ip ${POD_IP} \
                --out ./config/certs/${HOSTNAME}.zip --silent
              unzip -q -o ./config/certs/${HOSTNAME}.zip -d ./config/certs
              rm ./config/certs/${HOSTNAME}.zip
              exec /usr/local/bin/docker-entrypoint.sh
      volumes:
        - name: {{ .Values.elasticsearch.volume }}
          persistentVolumeClaim:
            claimName: {{ .Values.elasticsearch.volume }}
        {{- if .Values.elasticsearch.security }}
        - name: cert-authority
          secret:
            secretName: {{ .Values.elasticsearch.caSecret }}
        - name: cert-store
          emptyDir: {}
        - name: config
          configMap:
            name: elasticsearch-config
        {{ end }}
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.elasticsearch.volume }}
        labels:
          app: elasticsearch
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.elasticsearch.storageClass }}
        resources:
          requests:
            storage: {{ .Values.elasticsearch.storageRequest }}
